source("C:/Users/bravi/projects/celularesR/mercadoLibre.R", echo=TRUE)
source("C:/Users/bravi/projects/celularesR/mercadoLibre.R", echo=TRUE)
library(tidyverse)
library(rvest)
library(httr)
library(readxl)
library(stringr)
library(purrr) # to split strings
library(hrbrthemes)
library(viridis) # pallette of colors
library(viridisLite) # pallette of colors
#______SCRAPY WEB_______
# Algoritm to download all pages
set.seed(1)
# list of files in a Directory
pages <- (list.files(path = 'data24sep23/', pattern = '.html', all.files = TRUE, full.names = TRUE, recursive=FALSE))
# order for Date of creation
file_info <- file.info(pages)
file_info <- file_info[with(file_info, order(as.POSIXct(mtime))), ]
pages_ordered <- rownames(file_info)
pages_ordered <- list(pages_ordered)
View(pages_ordered)
pages_ordered[[1]]
pages_ordered[[1]]
# ....SCRAPY OF EACH PAGE....
# Name of smartphone and characteristics
carac_celulares <- list()
total_precios <- list()
list_caract <- sapply(pages_ordered[[1]], function(page){
print(page)
data <-read_html(page, encoding="UTF-8")
caracteristicas <- data |> html_elements(xpath = '//h2[@class="ui-search-item__title shops__item-title"]') |> html_text2()
print(caracteristicas)
carac_celulares <- c(
carac_celulares,
caracteristicas
)
})
list_precios <- sapply(pages_ordered[[1]], function(page){
print(page)
data <-read_html(page, encoding="UTF-8")
precios <- data |> html_elements(xpath = '//span[@class="andes-money-amount__fraction"]') |> html_text2()
print(precios)
total_precios <- c(
total_precios,
precios
)
})
# converting the list containg the scraped data into tibble
df_celulares <- tibble(
unlist(list_caract),
unlist(list_precios)
)
names(df_celulares) <- c('caracteristicas', 'precio')
View(df_celulares)
View(total_precios)
total_precios
View(list_caract)
list_caract[["data24sep23/page-101.html"]]
list_caract[["data24sep23/page-101.html"]][[1]]
#____________Wrangling____________
#Export tibble
writexl::write_xlsx(df_properties, 'celulares.xlsx')
#____________Wrangling____________
#Export tibble
writexl::write_xlsx(df_celulares, 'celulares.xlsx')
library(tidyverse)
library(rvest)
library(httr)
library(readxl)
library(stringr)
library(purrr) # to split strings
library(hrbrthemes)
library(viridis) # pallette of colors
library(viridisLite) # pallette of colors
#________Wrangling_________
df <- read_excel('celulares.xlsx')
View(df)
df[1,1]
df[1,2]
df[1,2] + df[2,2]
df[,2] <- lapply(df[,2], as.numeric)
df[1,2] + df[2,2]
source("C:/Users/bravi/projects/celularesR/celularesAnalisis.R", echo=TRUE)
#Median
median(df$precio)
# Mean
mean(df$precio)
# Create the function to calculate the MODE
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
moda <- getmode(df$precio)
moda
# Median
median(df$precio)
# Mean
mean(df$precio)
# Create the function to calculate the MODE
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
moda <- getmode(df$precio)
moda
plot_point <- df |> ggplot(aes(c(1:nrow(df)), precio, color= precio)) +
scale_color_gradient(low="#EBB02D",high="#159895")+
geom_point() +
labs(x = "Precio Smartphones Ecuador")
plot_point
df_filtered <- df |> filter(precio > 30)
View(df_filtered)
nrow(df)
nrow(df_filtered)
library(tidyverse)
library(rvest)
library(httr)
library(readxl)
library(stringr)
library(purrr) # to split strings
library(hrbrthemes)
library(viridis) # pallette of colors
library(viridisLite) # pallette of colors
#________Wrangling_________
df <- read_excel('celulares.xlsx')
# transform to numeric the price variable
df[,2] <- lapply(df[,2], as.numeric)
# get out accesories
df_filtered <- df |> filter(precio > 30)
plot_density <- df_filtered |> ggplot(aes(log10(precio))) +
geom_density(fill="#99627A") +
labs(x = "Precio Smartphone (normalizado)")
plot_density
plot_point <- df_filtered |> ggplot(aes(c(1:nrow(df_filtered)), precio, color= precio)) +
scale_color_gradient(low="#EBB02D",high="#159895")+
geom_point() +
labs(x = "Precio Smartphones Ecuador")
plot_point
# Median
median(df_filtered$precio)
# Mean
mean(df_filtered$precio)
# Create the function to calculate the MODE
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
moda <- getmode(df_filtered$precio)
moda
source("C:/Users/bravi/projects/celularesR/celularesAnalisis.R", echo=TRUE)
sample_n(diamonds, 1000)
library(highcharter)
# Interctive plot
hchart(df_filtered,
"scatter",
hcaes(caracteristicas, precio, group = precio))
# Interctive plot
hchart(df_filtered,
"scatter",
hcaes(c(1:nrow(df_filtered)), precio, group = precio))
# Interctive plot
hchart(df_filtered,
"scatter",
hcaes(c(1:nrow(df_filtered)), precio))
# Interctive plot
hchart(df_filtered,
"scatter",
hcaes(caracteristicas, precio))
# Interctive plot
hchart(df_filtered,
"scatter",
hcaes(caracteristicas, precio)) |>
hc_add_theme(hc_theme_bloom())
# Interctive plot
hchart(df_filtered,
"scatter",
hcaes(caracteristicas, precio)) |>
hc_add_theme(hc_theme_db())
# Interctive plot
hchart(df_filtered,
"scatter",
hcaes(c(1:nrow(df_filtered)), precio, group=precio)) |>
hc_add_theme(hc_theme_alone())
# Interctive plot
hchart(df_filtered,
"scatter",
hcaes(c(1:nrow(df_filtered)), precio)) |>
hc_add_theme(hc_theme_alone())
# Interctive plot
hchart(df_filtered,
"scatter",
hcaes(caracteristicas, precio)) |>
hc_add_theme(hc_theme_alone())
# Interctive plot
hchart(df_filtered,
"scatter",
hcaes(caracteristicas, precio)) |>
hc_add_theme(hc_theme_darkunica())
# Interctive plot
hchart(df_filtered,
"scatter",
hcaes(caracteristicas, precio, group=caracteristicas)) |>
hc_add_theme(hc_theme_darkunica())
# Interctive plot
hchart(df_filtered,
"scatter",
hcaes(caracteristicas, precio)) |>
hc_add_theme(hc_theme_darkunica())
df_prueba <- df_filtered |>
mutate(marca = str_extract(caracteristicas, regex("[^iPhone|Apple]")))
View(df_prueba)
df_prueba <- df_filtered |>
mutate(marca = str_extract(caracteristicas, regex("[^Apple]")))
df_prueba <- df_filtered |>
mutate(marca = str_extract(caracteristicas, regex("^Apple")))
df_prueba <- df_filtered |>
mutate(marca = str_extract(caracteristicas, regex("^Apple|iPhone")))
